{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { exhaustMap, take } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nexport class AuthInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    return this.authService.user.pipe(take(1), exhaustMap(user => {\n      if (!user) {\n        return next.handle(req);\n      }\n      const modifiedReq = req.clone({\n        params: new HttpParams().set('auth', user.token)\n      });\n      return next.handle(modifiedReq);\n    }));\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(i1.AuthService));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac\n});","map":{"version":3,"names":["HttpParams","exhaustMap","take","AuthInterceptorService","constructor","authService","intercept","req","next","user","pipe","handle","modifiedReq","clone","params","set","token","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["/home/oliver/Desktop/recipe-list-angular/src/app/auth/auth-interceptor.service.ts"],"sourcesContent":["import { HttpHandler, HttpInterceptor, HttpParams, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { AuthService } from \"./auth.service\";\nimport { exhaustMap, take } from \"rxjs/operators\";\n\n\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        return this.authService.user.pipe(take(1), exhaustMap(user => {\n            if (!user) {\n                return next.handle(req);\n            }\n            const modifiedReq = req.clone({ params: new HttpParams().set('auth', user.token) });\n            return next.handle(modifiedReq);\n        }));\n\n    }\n}"],"mappings":"AAAA,SAAuCA,UAAU,QAAqB,sBAAsB;AAI5F,SAASC,UAAU,EAAEC,IAAI,QAAQ,gBAAgB;;;AAKjD,OAAM,MAAOC,sBAAsB;EAC/BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAEhDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,OAAO,IAAI,CAACH,WAAW,CAACI,IAAI,CAACC,IAAI,CAACR,IAAI,CAAC,CAAC,CAAC,EAAED,UAAU,CAACQ,IAAI,IAAG;MACzD,IAAI,CAACA,IAAI,EAAE;QACP,OAAOD,IAAI,CAACG,MAAM,CAACJ,GAAG,CAAC;;MAE3B,MAAMK,WAAW,GAAGL,GAAG,CAACM,KAAK,CAAC;QAAEC,MAAM,EAAE,IAAId,UAAU,EAAE,CAACe,GAAG,CAAC,MAAM,EAAEN,IAAI,CAACO,KAAK;MAAC,CAAE,CAAC;MACnF,OAAOR,IAAI,CAACG,MAAM,CAACC,WAAW,CAAC;IACnC,CAAC,CAAC,CAAC;EAEP;;AAZST,sBAAsB,C;mBAAtBA,sBAAsB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAtBjB,sBAAsB,C;SAAtBA,sBAAsB;EAAAkB,OAAA,EAAtBlB,sBAAsB,CAAAmB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}