{"ast":null,"code":"import { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.user.pipe(take(1), map(user => {\n      const isAuth = !!user;\n      if (isAuth) {\n        return true;\n      }\n      return this.router.createUrlTree(['/auth']);\n    }));\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","take","AuthGuard","constructor","authService","router","canActivate","route","state","user","pipe","isAuth","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/home/oliver/Desktop/recipe-list-angular/src/app/auth/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return this.authService.user.pipe(\n      take(1),\n      map((user) => {\n        const isAuth = !!user;\n        if (isAuth) {\n          return true;\n        }\n        return this.router.createUrlTree(['/auth']);\n      })\n    );\n  }\n}\n"],"mappings":"AASA,SAASA,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;;AAI1C,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAM1B,OAAO,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACC,IAAI,CAC/BT,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAES,IAAI,IAAI;MACX,MAAME,MAAM,GAAG,CAAC,CAACF,IAAI;MACrB,IAAIE,MAAM,EAAE;QACV,OAAO,IAAI;;MAEb,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,CACH;EACH;;AArBWV,SAAS,C;mBAATA,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAThB,SAAS,C;SAATA,SAAS;EAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;EAAAC,UAAA,EADI;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}